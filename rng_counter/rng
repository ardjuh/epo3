library IEEE;
use IEEE.std_logic_1164.ALL;
use IEEE.numeric_std.all;

architecture behaviour of rngtest is
signal count, deck_count: unsigned(7 downto 0);
begin
	process(round_end)
	begin 
		if round_end = '1' then --goes 1 when a new round is started
			if deck_count <= to_unsigned(52,8) then --checks wether there are only 52 cards left after the round and then resets the memory
					count <= to_unsigned(1,8);
					deck_count <= to_unsigned(208,8);
					shuffle <= '1';
			else shuffle <= '0';
			end if;
		else shuffle <= '0';
		end if;
	end process;	

	process(clk,reset)
	begin
		if reset = '1' then --resets the whole counter
			count <= to_unsigned(1,8);
			deck_count <= to_unsigned(208,8);
		elsif count >= deck_count then --if the counter reaches its maximum it goes to zero
			count <= to_unsigned(1,8);
		elsif rising_edge(clk) then --every rising edge adds 1 to the counter
			count <= count + 1;
		end if;	
	end process;

	process(request_card)
	begin
		if request_card = '1' then --a card is requested so it gives a randomnum to the memory and lowers the total cards
			random_num <= std_logic_vector(count);
			deck_count <= deck_count -1;
		else 		
			random_num <= (others => '0');
		end if;	
	end process;


end behaviour;

